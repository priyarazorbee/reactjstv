{"ast":null,"code":"var _jsxFileName = \"E:\\\\Priya\\\\player\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Home.css';\nimport { PostData } from '../../services/PostData';\nimport UserFeed from \"../UserFeed/UserFeed\";\nimport ReactConfirmAlert, { confirmAlert } from 'react-confirm-alert';\nimport '../../styles/react-confirm-alert.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      userFeed: '',\n      redirectToReferrer: false,\n      name: ''\n    };\n    this.getUserFeed = this.getUserFeed.bind(this);\n    this.feedUpdate = this.feedUpdate.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.deleteFeed = this.deleteFeed.bind(this);\n    this.deleteFeedAction = this.deleteFeedAction.bind(this);\n    this.convertTime = this.convertTime.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentWillMount() {\n    if (sessionStorage.getItem(\"userData\")) {\n      this.getUserFeed();\n    } else {\n      this.setState({\n        redirectToReferrer: true\n      });\n    }\n  }\n\n  feedUpdate(e) {\n    e.preventDefault();\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\n    let postData = {\n      user_id: data.userData.user_id,\n      token: data.userData.token,\n      feed: this.state.userFeed\n    };\n\n    if (this.state.userFeed) {\n      PostData('feedUpdate', postData).then(result => {\n        let responseJson = result;\n        let K = [responseJson.feedData].concat(this.state.data);\n        console.log(K);\n        this.setState({\n          data: K,\n          userFeed: ''\n        });\n      });\n    }\n  }\n\n  convertTime(created) {\n    let date = new Date(created * 1000);\n    return date;\n  }\n\n  deleteFeedAction(e) {\n    console.log(\"HI\");\n    let updateIndex = e.target.getAttribute('value');\n    let feed_id = e.target.getAttribute('data');\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\n    let postData = {\n      user_id: data.userData.user_id,\n      token: data.userData.token,\n      feed_id: feed_id\n    };\n\n    if (postData) {\n      PostData('feedDelete', postData).then(result => {\n        this.state.data.splice(updateIndex, 1);\n        this.setState({\n          data: this.state.data\n        });\n      });\n    }\n  }\n\n  deleteFeed(e) {\n    confirmAlert({\n      title: '',\n      message: 'Are you sure?',\n      childrenElement: () => '',\n      confirmLabel: 'Delete',\n      cancelLabel: 'Cancel',\n      onConfirm: () => this.deleteFeedAction(e),\n      onCancel: () => ''\n    });\n  }\n\n  getUserFeed() {\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\n    this.setState({\n      name: data.userData.name\n    });\n    let postData = {\n      user_id: data.userData.user_id,\n      token: data.userData.token\n    };\n\n    if (data) {\n      PostData('feed', postData).then(result => {\n        let responseJson = result;\n        this.setState({\n          data: responseJson.feedData\n        });\n        console.log(this.state);\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      userFeed: e.target.value\n    });\n  }\n\n  logout() {\n    sessionStorage.setItem(\"userData\", '');\n    sessionStorage.clear();\n    this.setState({\n      redirectToReferrer: true\n    });\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/login',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      id: \"Body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"medium-12 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.logout,\n      className: \"logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.feedUpdate,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"userFeed\",\n      onChange: this.onChange,\n      value: this.state.userFeed,\n      type: \"text\",\n      placeholder: \"What's up?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Post\",\n      className: \"button\",\n      onClick: this.feedUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(UserFeed, {\n      feedData: this.state.data,\n      deleteFeed: this.deleteFeed,\n      convertTime: this.convertTime,\n      name: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/Priya/player/src/components/Home/Home.js"],"names":["React","Component","Redirect","PostData","UserFeed","ReactConfirmAlert","confirmAlert","Home","constructor","props","state","data","userFeed","redirectToReferrer","name","getUserFeed","bind","feedUpdate","onChange","deleteFeed","deleteFeedAction","convertTime","logout","componentWillMount","sessionStorage","getItem","setState","e","preventDefault","JSON","parse","postData","user_id","userData","token","feed","then","result","responseJson","K","feedData","concat","console","log","created","date","Date","updateIndex","target","getAttribute","feed_id","splice","title","message","childrenElement","confirmLabel","cancelLabel","onConfirm","onCancel","value","setItem","clear","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Home.css';\r\nimport {PostData} from '../../services/PostData';\r\nimport UserFeed from \"../UserFeed/UserFeed\";\r\nimport ReactConfirmAlert, { confirmAlert } from 'react-confirm-alert'; \r\nimport '../../styles/react-confirm-alert.css';\r\n\r\nclass Home extends Component {\r\n \r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data:[],\r\n      userFeed: '',\r\n      redirectToReferrer: false,\r\n      name:'',\r\n    };\r\n\r\n    this.getUserFeed = this\r\n      .getUserFeed\r\n      .bind(this);\r\n    this.feedUpdate = this.feedUpdate.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.deleteFeed = this.deleteFeed.bind(this);\r\n    this.deleteFeedAction = this.deleteFeedAction.bind(this);\r\n    this.convertTime = this.convertTime.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n   if(sessionStorage.getItem(\"userData\")){\r\n    this.getUserFeed();\r\n   }\r\n  \r\n   else{\r\n    this.setState({redirectToReferrer: true});\r\n   }\r\n   \r\n\r\n  }\r\n\r\n  feedUpdate(e) {\r\n    e.preventDefault();\r\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    let postData = { user_id: data.userData.user_id, token: data.userData.token, feed: this.state.userFeed };\r\n    if (this.state.userFeed) {\r\n      PostData('feedUpdate', postData).then((result) => {\r\n        let responseJson = result;\r\n        let K = [responseJson.feedData].concat(this.state.data);\r\n        console.log(K);\r\n       this.setState({data: K , userFeed:''});\r\n      });\r\n    }\r\n  }\r\n\r\n  convertTime(created) {\r\n    let date = new Date(created * 1000);\r\n    return date;\r\n  }\r\n\r\n  deleteFeedAction(e){\r\n    console.log(\"HI\");\r\n  let updateIndex=e.target.getAttribute('value');\r\n  let feed_id=e.target.getAttribute('data');\r\n  \r\n  let data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\r\n  let postData = { user_id: data.userData.user_id, token: data.userData.token, feed_id: feed_id };\r\n  if (postData) {\r\n    PostData('feedDelete', postData).then((result) => {\r\n     this\r\n     .state\r\n     .data.splice(updateIndex,1);\r\n    this.setState({data:this\r\n      .state\r\n      .data});\r\n    });\r\n  }\r\n  }\r\n\r\n  deleteFeed(e){\r\n\r\n\r\n      confirmAlert({\r\n        title: '',                        \r\n        message: 'Are you sure?',               \r\n        childrenElement: () => '',       \r\n        confirmLabel: 'Delete',                          \r\n        cancelLabel: 'Cancel',                            \r\n        onConfirm: () => this.deleteFeedAction(e),    \r\n        onCancel: () => '',      \r\n      })\r\n \r\n    \r\n\r\n       \r\n  }\r\n\r\n  getUserFeed() {\r\n  \r\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    this.setState({name:data.userData.name});\r\n    let postData = { user_id: data.userData.user_id, token: data.userData.token}; \r\n\r\n    if (data) {\r\n      PostData('feed', postData).then((result) => {\r\n        let responseJson = result;\r\n        this.setState({data: responseJson.feedData});\r\n        console.log(this.state);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({userFeed:e.target.value});\r\n   }\r\n   logout(){\r\n     sessionStorage.setItem(\"userData\",'');\r\n     sessionStorage.clear();\r\n     this.setState({redirectToReferrer: true});\r\n   }\r\n\r\n  render() {\r\n    if (this.state.redirectToReferrer) {\r\n      return (<Redirect to={'/login'}/>)\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\" id=\"Body\">\r\n        <div className=\"medium-12 columns\">\r\n        <a href=\"#\" onClick={this.logout} className=\"logout\">Logout</a>\r\n        <form onSubmit={this.feedUpdate} method=\"post\">\r\n            <input name=\"userFeed\" onChange={this.onChange} value={this.state.userFeed} type=\"text\" placeholder=\"What's up?\"/>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Post\"\r\n              className=\"button\"\r\n              onClick={this.feedUpdate}/>\r\n              </form>\r\n        \r\n        </div>\r\n        <UserFeed feedData = {this.state.data}  deleteFeed = {this.deleteFeed} convertTime={this.convertTime} name={this.state.name}/>\r\n        \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}