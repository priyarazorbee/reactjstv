{"ast":null,"code":"var _jsxFileName = \"E:\\\\Priya\\\\player\\\\src\\\\components\\\\Welcome\\\\Welcome.js\";\nimport React, { Component } from 'react';\nimport './Welcome.css';\nimport axios from 'axios';\n\nclass Welcome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    axios // This is where the data is hosted\n    .get(\"http://project.razorbee.com/signage/signage-rb/client/player/play.json\") // Once we get a response and store data, let's change the loading state\n    .then(response => {\n      this.setState({\n        posts: response.data.posts,\n        isLoading: false\n      });\n    }) // If we catch any errors connecting, let's update accordingly\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Let's our app know we're ready to render the data\n\n\n  componentDidMount() {\n    this.getPosts();\n  } // Putting that data to use\n\n\n  render() {\n    const {\n      isLoading,\n      posts\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Random Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, !isLoading ? posts.map(post => {\n      const {\n        _id,\n        title,\n        content\n      } = post;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, content), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default Welcome;","map":{"version":3,"sources":["E:/Priya/player/src/components/Welcome/Welcome.js"],"names":["React","Component","axios","Welcome","state","posts","isLoading","errors","getPosts","get","then","response","setState","data","catch","error","componentDidMount","render","map","post","_id","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAN,SAAsBH,KAAK,CAACC,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCG,KAFoC,GAE5B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAF4B;AAAA;;AAOpC;AACAC,EAAAA,QAAQ,GAAG;AACTN,IAAAA,KAAK,CACH;AADG,KAEFO,GAFH,CAEO,wEAFP,EAGE;AAHF,KAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEM,QAAQ,CAACE,IAAT,CAAcR,KADT;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KATH,EAUE;AAVF,KAWGQ,KAXH,CAWSC,KAAK,IAAI,KAAKH,QAAL,CAAc;AAAEG,MAAAA,KAAF;AAAST,MAAAA,SAAS,EAAE;AAApB,KAAd,CAXlB;AAYD,GArBmC,CAsBpC;;;AACAU,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,QAAL;AACD,GAzBmC,CA0BpC;;;AACAS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAAuB,KAAKD,KAAlC;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACE,SAAD,GACCD,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;AAChB,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA,KAAP;AAAcC,QAAAA;AAAd,UAA0BH,IAAhC;AACA,0BACE;AAAK,QAAA,GAAG,EAAEC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,OAAJ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KATD,CADD,gBAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CAFF,CADF;AAqBD;;AAlDmC;;AAoDtC,eAAenB,OAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport './Welcome.css';\r\nimport axios from 'axios';\r\nclass Welcome extends React.Component {\r\n  // State will apply to the posts object which is set to loading by default\r\n  state = {\r\n    posts: [],\r\n    isLoading: true,\r\n    errors: null\r\n  };\r\n  // Now we're going to make a request for data using axios\r\n  getPosts() {\r\n    axios\r\n      // This is where the data is hosted\r\n      .get(\"http://project.razorbee.com/signage/signage-rb/client/player/play.json\")\r\n      // Once we get a response and store data, let's change the loading state\r\n      .then(response => {\r\n        this.setState({\r\n          posts: response.data.posts,\r\n          isLoading: false\r\n        });\r\n      })\r\n      // If we catch any errors connecting, let's update accordingly\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  // Let's our app know we're ready to render the data\r\n  componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n  // Putting that data to use\r\n  render() {\r\n    const { isLoading, posts } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Random Post</h2>\r\n        <div>\r\n          {!isLoading ? (\r\n            posts.map(post => {\r\n              const { _id, title, content } = post;\r\n              return (\r\n                <div key={_id}>\r\n                  <h2>{title}</h2>\r\n                  <p>{content}</p>\r\n                  <hr />\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}