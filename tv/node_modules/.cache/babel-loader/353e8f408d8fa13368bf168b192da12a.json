{"ast":null,"code":"var _jsxFileName = \"E:\\\\Priya\\\\player\\\\src\\\\components\\\\Welcome\\\\Welcome.js\";\nimport React, { Component } from 'react';\nimport Fullscreen from \"react-full-screen\";\nimport './Welcome.css';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      assets: []\n    };\n\n    this.maskClick = () => {\n      this.setState(prevState => ({\n        fullScreen: !prevState.fullScreen\n      }), () => {\n        if (!this.state.fullScreen) {\n          this._fullScreenActive = setTimeout(() => {\n            this.setState({\n              fullScreen: true\n            });\n          }, this._fullScreenIntervalSeconds * 1000);\n        } else {\n          clearTimeout(this._fullScreenActive);\n        }\n      });\n    };\n\n    this.playPauseClick = () => {\n      this.setState(prevState => ({\n        playing: !prevState.playing\n      }), () => {\n        if (!this.state.playing) {\n          this._video.pause();\n        } else {\n          this._video.play();\n        }\n      });\n    };\n\n    this.settingsOpen = () => {\n      this.setState({\n        showSettings: true\n      });\n    };\n\n    this.settingsClose = () => {\n      this.setState({\n        showSettings: false\n      });\n    };\n\n    this.onLoadStart = () => {\n      setTimeout(() => {\n        this.setState({\n          dur: this.secondsToTime(this._video.duration)\n        });\n      }, 100);\n    };\n\n    this.onProgress = () => {\n      console.log(this._video.currentTime);\n      this.setState({\n        dur: this.secondsToTime(Math.round(this._video.duration - this._video.currentTime)),\n        progress: `${(this._video.currentTime + 0.25) / this._video.duration * 100}%`\n      });\n    };\n\n    this.toggleFullScreen = () => {\n      var el = document.getElementById(\"full-screenVideo\");\n\n      if (el.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el.msRequestFullscreen) {\n        el.msRequestFullscreen();\n      } else if (el.mozRequestFullScreen) {\n        el.mozRequestFullScreen();\n      } else if (el.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    };\n\n    this._video = null;\n    this._fullScreenActive = null;\n    this._fullScreenIntervalSeconds = 5;\n    this.state = {\n      fullScreen: false,\n      playing: false,\n      showSettings: false,\n      dur: \"00:00:00\",\n      progress: \"0\"\n    };\n  }\n\n  secondsToTime(s) {\n    const pad = (n, z = 2) => (\"00\" + n).slice(-z);\n\n    const secs = s % 60;\n    s = (s - secs) / 60;\n    const mins = s % 60;\n    const hrs = (s - mins) / 60;\n    return pad(hrs) + \":\" + pad(mins) + \":\" + pad(secs);\n  }\n\n  componentDidMount() {\n    fetch('./play.json').then(res => res.json()).then(data => {\n      this.setState({\n        assets: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const data = this.state.assets.data && this.state.assets.data.assets ? this.state.assets.data.assets : [];\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, data.map((asset, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: asset.filename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      controls: true,\n      autoPlay: true,\n      loop: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: asset.filename,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }\n    })))))))));\n  }\n\n}\n\nexport default Welcome;","map":{"version":3,"sources":["E:/Priya/player/src/components/Welcome/Welcome.js"],"names":["React","Component","Fullscreen","ReactDOM","axios","Welcome","constructor","props","state","assets","maskClick","setState","prevState","fullScreen","_fullScreenActive","setTimeout","_fullScreenIntervalSeconds","clearTimeout","playPauseClick","playing","_video","pause","play","settingsOpen","showSettings","settingsClose","onLoadStart","dur","secondsToTime","duration","onProgress","console","log","currentTime","Math","round","progress","toggleFullScreen","el","document","getElementById","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","s","pad","n","z","slice","secs","mins","hrs","componentDidMount","fetch","then","res","json","data","catch","render","map","asset","index","id","filename"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport './Welcome.css';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\nclass Welcome extends React.Component {\r\n     constructor(props) {\r\n    super(props);\r\n    this._video = null;\r\n    this._fullScreenActive = null;\r\n    this._fullScreenIntervalSeconds = 5;\r\n    this.state = {\r\n      fullScreen: false,\r\n      playing: false,\r\n      showSettings: false,\r\n      dur: \"00:00:00\",\r\n      progress: \"0\"\r\n    };\r\n  }\r\n  state = {\r\n    assets: []\r\n  }\r\nsecondsToTime(s) {\r\n    const pad = (n, z = 2) => (\"00\" + n).slice(-z);\r\n    const secs = s % 60;\r\n    s = (s - secs) / 60;\r\n    const mins = s % 60;\r\n    const hrs = (s - mins) / 60;\r\n    return pad(hrs) + \":\" + pad(mins) + \":\" + pad(secs);\r\n  }\r\n  componentDidMount() {\r\n    fetch('./play.json')\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      this.setState({ assets: data  })\r\n   \r\n    })\r\n    .catch(console.log)\r\n  }\r\n\r\nmaskClick = () => {\r\n    this.setState(\r\n      prevState => ({\r\n        fullScreen: !prevState.fullScreen\r\n      }),\r\n      () => {\r\n        if (!this.state.fullScreen) {\r\n          this._fullScreenActive = setTimeout(() => {\r\n            this.setState({ fullScreen: true });\r\n          }, this._fullScreenIntervalSeconds * 1000);\r\n        } else {\r\n          clearTimeout(this._fullScreenActive);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  playPauseClick = () => {\r\n    this.setState(\r\n      prevState => ({\r\n        playing: !prevState.playing\r\n      }),\r\n      () => {\r\n        if (!this.state.playing) {\r\n          this._video.pause();\r\n        } else {\r\n          this._video.play();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  settingsOpen = () => {\r\n    this.setState({ showSettings: true });\r\n  };\r\n  settingsClose = () => {\r\n    this.setState({ showSettings: false });\r\n  };\r\n  onLoadStart = () => {\r\n    setTimeout(() => {\r\n      this.setState({ dur: this.secondsToTime(this._video.duration) });\r\n    }, 100);\r\n  };\r\n  onProgress = () => {\r\n    console.log(this._video.currentTime);\r\n    this.setState({\r\n      dur: this.secondsToTime(\r\n        Math.round(this._video.duration - this._video.currentTime)\r\n      ),\r\n      progress: `${((this._video.currentTime + 0.25) / this._video.duration) *\r\n        100}%`\r\n    });\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    var el = document.getElementById(\"full-screenVideo\");\r\n    if (el.requestFullscreen) {\r\n      el.requestFullscreen();\r\n    } else if (el.msRequestFullscreen) {\r\n      el.msRequestFullscreen();\r\n    } else if (el.mozRequestFullScreen) {\r\n      el.mozRequestFullScreen();\r\n    } else if (el.webkitRequestFullscreen) {\r\n      el.webkitRequestFullscreen();\r\n    }\r\n  };\r\n render() {\r\nconst data = this.state.assets.data && this.state.assets.data.assets ? this.state.assets.data.assets :[];\r\n     console.log(this.state);\r\n    return (\r\n  \r\n       <div className=\"container\">\r\n        <div className=\"col-xs-12\">\r\n       \r\n         {data.map((asset , index) => (\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <table key={data.id}>\r\n      <tr>\r\n   <img src={asset.filename}/>\r\n     \r\n        <video controls \r\n        autoPlay \r\n        loop >\r\n       <source src={asset.filename} type=\"video/mp4\"/> \r\n     </video>\r\n   </tr>     \r\n  </table>\r\n            </div>\r\n          </div>\r\n    \r\n        ))}\r\n        </div>\r\n       </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Welcome;\r\n"]},"metadata":{},"sourceType":"module"}